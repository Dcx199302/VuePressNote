import{_ as p,p as e,q as o,Q as s,R as n,t as a,a1 as t}from"./framework-5866ffd3.js";const c={},l=n("h1",{id:"router",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#router","aria-hidden":"true"},"#"),a(" router")],-1),i=n("h2",{id:"一、获取路由参数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、获取路由参数","aria-hidden":"true"},"#"),a(" 一、获取路由参数")],-1),u=t(`<h4 id="一、get参数获取" tabindex="-1"><a class="header-anchor" href="#一、get参数获取" aria-hidden="true">#</a> <strong>一、get参数获取</strong></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ActivatedRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">BuyerComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>
    <span class="token comment">//1. 引入ActivatedRoute</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> <span class="token literal-property property">activatedRoute</span><span class="token operator">:</span>ActivatedRoute</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
	<span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    	<span class="token keyword">this</span><span class="token punctuation">.</span>activatedRoute<span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">query</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    		<span class="token comment">//2. 打印参数</span>
        	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="二、没写" tabindex="-1"><a class="header-anchor" href="#二、没写" aria-hidden="true">#</a> <strong>二、没写</strong></h4>`,3),r=n("h2",{id:"二、http统一拦截",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、http统一拦截","aria-hidden":"true"},"#"),a(" 二、Http统一拦截")],-1),k=n("ul",null,[n("li",null,"/app/interceptor/..."),n("li",null,"给http请求修改url 和添加 headers属性")],-1),d=t(`<h4 id="http-interceptor-ts" tabindex="-1"><a class="header-anchor" href="#http-interceptor-ts" aria-hidden="true">#</a> <strong>http.interceptor.ts</strong></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  HttpEvent<span class="token punctuation">,</span> HttpInterceptor<span class="token punctuation">,</span> HttpHandler<span class="token punctuation">,</span> HttpRequest<span class="token punctuation">,</span> HttpResponse
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common/http&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> tap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** Pass untouched request through to the next request handler. */</span>
@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyHttpInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HttpInterceptor</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> <span class="token literal-property property">router</span><span class="token operator">:</span> Router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">intercept</span><span class="token punctuation">(</span>httpRequest<span class="token operator">:</span> HttpRequest<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">next</span><span class="token operator">:</span> HttpHandler<span class="token punctuation">)</span><span class="token operator">:</span>
    Observable<span class="token operator">&lt;</span>HttpEvent<span class="token operator">&lt;</span>any<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 拦截请求,给请求头添加token</span>
    <span class="token keyword">let</span> url <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span>url <span class="token comment">// 可以对url进行处理</span>
    <span class="token comment">// let token = document.cookie &amp;&amp; document.cookie.split(&quot;=&quot;)[1]</span>
    <span class="token keyword">let</span> token <span class="token operator">=</span> <span class="token string">&#39;12312312312312312312&#39;</span>
    <span class="token comment">// 登录请求排除在外</span>
    <span class="token comment">// if (!url.includes(&#39;login&#39;)) {</span>
        httpRequest <span class="token operator">=</span> httpRequest<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            url<span class="token punctuation">,</span> <span class="token comment">// 处理后的url,再赋值给req</span>
            <span class="token literal-property property">headers</span><span class="token operator">:</span> httpRequest<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Authorization&#39;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token comment">//请求头统一添加token</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// }</span>
    <span class="token keyword">return</span> next<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
        <span class="token function">tap</span><span class="token punctuation">(</span>
         <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">HttpResponse</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 处理错误</span>
           <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span>
         <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// token过期 服务器错误等处理</span>
        <span class="token comment">//   this.router.navigate([&#39;/login&#39;]);</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
       <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="app-module-ts" tabindex="-1"><a class="header-anchor" href="#app-module-ts" aria-hidden="true">#</a> <strong>app.module.ts</strong></h4><div class="language-clike line-numbers-mode" data-ext="clike"><pre class="language-clike"><code> import <span class="token punctuation">{</span> HttpClientModule<span class="token punctuation">,</span> HTTP_INTERCEPTORS <span class="token punctuation">}</span> from <span class="token string">&#39;@angular/common/http&#39;</span><span class="token punctuation">;</span>
 import <span class="token punctuation">{</span> MyHttpInterceptor <span class="token punctuation">}</span> from <span class="token string">&#39;./interceptor/http.interceptor&#39;</span><span class="token punctuation">;</span>
 providers<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> provide<span class="token punctuation">:</span> NZ_I18N<span class="token punctuation">,</span> useValue<span class="token punctuation">:</span> zh_CN <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> provide<span class="token punctuation">:</span> HTTP_INTERCEPTORS<span class="token punctuation">,</span> useClass<span class="token punctuation">:</span> MyHttpInterceptor<span class="token punctuation">,</span> multi<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v=n("h2",{id:"三、路由守卫",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#三、路由守卫","aria-hidden":"true"},"#"),a(" 三、路由守卫")],-1),m=n("ul",null,[n("li",null,[n("p",null,"基本的守卫逻辑")]),n("li",null,[n("p",null,"路径：src/app/auth/")])],-1),b=t(`<h4 id="auth-service-ts" tabindex="-1"><a class="header-anchor" href="#auth-service-ts" aria-hidden="true">#</a> <strong>auth.service.ts</strong></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Observable<span class="token punctuation">,</span> <span class="token keyword">of</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> delay<span class="token punctuation">,</span> tap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>

@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">providedIn</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AuthService</span> <span class="token punctuation">{</span>

<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

isLoggedIn <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//默认未登录</span>

<span class="token comment">// 记录登录之后,需要跳转到原来请求的地址</span>

  redirectUrl<span class="token operator">!</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token comment">// 登录</span>
  <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">of</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
      <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">tap</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>isLoggedIn <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token comment">// 登出</span>
  <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isLoggedIn <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="auth-guard-ts" tabindex="-1"><a class="header-anchor" href="#auth-guard-ts" aria-hidden="true">#</a> <strong>auth.guard.ts</strong></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CanActivate<span class="token punctuation">,</span> ActivatedRouteSnapshot<span class="token punctuation">,</span> RouterStateSnapshot<span class="token punctuation">,</span> Router <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> AuthService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./auth.service&#39;</span><span class="token punctuation">;</span> 
@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">providedIn</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AuthGuard</span> <span class="token keyword">implements</span> <span class="token class-name">CanActivate</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> <span class="token literal-property property">authService</span><span class="token operator">:</span> AuthService<span class="token punctuation">,</span> <span class="token keyword">private</span> <span class="token literal-property property">router</span><span class="token operator">:</span> Router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">canActivate</span><span class="token punctuation">(</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> ActivatedRouteSnapshot<span class="token punctuation">,</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> RouterStateSnapshot<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token literal-property property">url</span><span class="token operator">:</span> string <span class="token operator">=</span> state<span class="token punctuation">.</span>url
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkLogin</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token function">checkLogin</span><span class="token punctuation">(</span>url<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>authService<span class="token punctuation">.</span>isLoggedIn<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">// 保存原始的请求地址,登录后跳转到该地址</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>authService<span class="token punctuation">.</span>redirectUrl <span class="token operator">=</span> url<span class="token punctuation">;</span>

    <span class="token comment">// 未登录,跳转到登录页面</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),h=n("p",null,"demo===============",-1);function g(y,f){return e(),o("div",null,[l,i,s(" tabs:start "),u,s(" tabs:end "),r,k,s(" tabs:start "),d,s(" tabs:end "),v,m,s(" tabs:start "),b,s(" tabs:end "),h,s(" tabs:start "),s(" tabs:end ")])}const _=p(c,[["render",g],["__file","router.html.vue"]]);export{_ as default};
