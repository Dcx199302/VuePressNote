import{_ as p,M as o,p as c,q as i,R as n,t as s,N as e,a1 as t}from"./framework-5866ffd3.js";const l={},u={href:"https://coding.imooc.com/lesson/617.html#mid=59633",target:"_blank",rel:"noopener noreferrer"},d=t(`<h2 id="一、使用dotenv-方案" tabindex="-1"><a class="header-anchor" href="#一、使用dotenv-方案" aria-hidden="true">#</a> 一、使用dotenv 方案</h2><blockquote><p>官方使用的方案，适用于简单的配置</p></blockquote><h3 id="基础用法" tabindex="-1"><a class="header-anchor" href="#基础用法" aria-hidden="true">#</a> 基础用法：</h3><h4 id="_1、安装-官方-nestjs-config" tabindex="-1"><a class="header-anchor" href="#_1、安装-官方-nestjs-config" aria-hidden="true">#</a> 1、安装 - 官方@nestjs/config</h4><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm i --save @nestjs/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2、创建-env-与src-同级文件" tabindex="-1"><a class="header-anchor" href="#_2、创建-env-与src-同级文件" aria-hidden="true">#</a> 2、创建 <code>.env</code> 与src 同级文件</h4><blockquote><p>.env 示例：</p><p>新版的nest好像会自动加载根目录的env文件数据 。不要同时使用多种方案</p></blockquote><div class="language-.env line-numbers-mode" data-ext=".env"><pre class="language-.env"><code>DB=mysql
DB_HOST=127.0.0.1
DATABASE=test
DATABASE_PASSWORD=test123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、配置src-app-module-ts" tabindex="-1"><a class="header-anchor" href="#_3、配置src-app-module-ts" aria-hidden="true">#</a> 3、配置<code>src/app.module.ts</code></h4><blockquote><p>在nest模块中加载配置文件.env</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.service&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/config&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// forRoot方法会去读取根目录下的 .env文件，加载config 配置文件的属性</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    ConfigModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// isGlobal可选,开启就可以全局访问 configService。 否则只能在当前模块</span>
        isGlobal<span class="token operator">:</span><span class="token boolean">true</span>  
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>AppService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、在service文件中使用" tabindex="-1"><a class="header-anchor" href="#_4、在service文件中使用" aria-hidden="true">#</a> 4、在Service文件中使用</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./enum/config.enum&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppService</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> config<span class="token operator">:</span> ConfigService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;db&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//这里可以读取到config的配置信息</span>
      
      <span class="token comment">// 使用枚举防止字符串书写错误-推荐</span>
      <span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ConfigEnum<span class="token punctuation">.</span><span class="token constant">DB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ConfigEnum<span class="token punctuation">.</span><span class="token constant">DB_HOST</span><span class="token punctuation">)</span>
      
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>创建枚举文件 <code>src/enum/config.enum.ts</code></p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> ConfigEnum <span class="token punctuation">{</span>
  <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token string">&#39;DB&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DB_HOST</span> <span class="token operator">=</span> <span class="token string">&#39;DB_HOST&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="进阶使用" tabindex="-1"><a class="header-anchor" href="#进阶使用" aria-hidden="true">#</a> 进阶使用：</h3><h4 id="_1、创建多个环境-dev和prod" tabindex="-1"><a class="header-anchor" href="#_1、创建多个环境-dev和prod" aria-hidden="true">#</a> 1、创建多个环境 dev和prod</h4><blockquote><p>前面创建的 <code>.env</code>作为公共配置。分别再创建开发和正式两个 env 文件</p></blockquote><div class="language-.env line-numbers-mode" data-ext=".env"><pre class="language-.env"><code>DB=mysql
DB_HOST=127.0.0.1
DATABASE=test
DATABASE_PASSWORD=test123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>src</code>同级创建<code>.env.development</code> 和 <code>.env.production</code> 两个文件</p></blockquote><div class="language-.env.development line-numbers-mode" data-ext=".env.development"><pre class="language-.env.development"><code>DB_RUL=www.dev.baidu.com
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-.env.production line-numbers-mode" data-ext=".env.production"><pre class="language-.env.production"><code>DB_RUL=www.prod.baidu.com
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h5><h4 id="_2、配置app-module-ts" tabindex="-1"><a class="header-anchor" href="#_2、配置app-module-ts" aria-hidden="true">#</a> 2、配置app.module.ts</h4><blockquote><p>安装 dotenv</p></blockquote><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm i dotenv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> dotenv <span class="token keyword">from</span> <span class="token string">&#39;dotenv&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 默认使用 上面创建的 .env.production 配置文件</span>
<span class="token keyword">const</span> envFilePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.env.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">development</span><span class="token template-punctuation string">\`</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    ConfigModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      isGlobal<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        
      <span class="token comment">// 配置加载配置文件的环境 development Or production</span>
      envFilePath<span class="token punctuation">,</span>
        
      <span class="token comment">// 合并 .env 文件公用部分 配置</span>
      load<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;.env&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、在本地切换dev-和-prod-环境" tabindex="-1"><a class="header-anchor" href="#_3、在本地切换dev-和-prod-环境" aria-hidden="true">#</a> 3、在本地切换dev 和 prod 环境</h4><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm i -D cross-env
// 用于设置 p<wbr>rocess.env.NODE_ENV
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>修改<code>package.json</code> 添加 cross-env NODE_ENV = development || production</p></blockquote><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=development nest start --watch&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;start:prod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=production node dist/main&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> envFilePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.env.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">development</span><span class="token template-punctuation string">\`</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="二、yaml-文件方案" tabindex="-1"><a class="header-anchor" href="#二、yaml-文件方案" aria-hidden="true">#</a> 二、yaml 文件方案</h2><h3 id="基础用法-1" tabindex="-1"><a class="header-anchor" href="#基础用法-1" aria-hidden="true">#</a> 基础用法</h3><h4 id="_1、安装-解析-yaml-文件的依赖" tabindex="-1"><a class="header-anchor" href="#_1、安装-解析-yaml-文件的依赖" aria-hidden="true">#</a> 1、安装 解析 yaml 文件的依赖，</h4><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm i js-yaml
npm i @types/js-yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、创建配置文件" tabindex="-1"><a class="header-anchor" href="#_2、创建配置文件" aria-hidden="true">#</a> 2、创建配置文件</h4><blockquote><p>在根目录创建<code>config/config.yml</code>文件</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">db</span><span class="token punctuation">:</span>
  <span class="token key atrule">mysql1</span><span class="token punctuation">:</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>

  <span class="token key atrule">mysql2</span><span class="token punctuation">:</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>config.yml同级创建<code>config.development.yml</code> 和 <code>config.production.yml</code> 两个文件</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">db</span><span class="token punctuation">:</span>
  <span class="token key atrule">mysql1</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>prod1
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>

  <span class="token key atrule">mysql2</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>prod2
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">db</span><span class="token punctuation">:</span>
  <span class="token key atrule">mysql1</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>dev1
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>

  <span class="token key atrule">mysql2</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>dev2
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在src目录创建<code>configuration.ts</code></p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> readFileSync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> yaml <span class="token keyword">from</span> <span class="token string">&#39;js-yaml&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">YAML_COMMON_CONFIG_FILENAME</span> <span class="token operator">=</span> <span class="token string">&#39;config.yml&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../config&#39;</span><span class="token punctuation">,</span> <span class="token constant">YAML_COMMON_CONFIG_FILENAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> envPath <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>
  __dirname<span class="token punctuation">,</span>
  <span class="token string">&#39;../config&#39;</span><span class="token punctuation">,</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">config.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">||</span> <span class="token string">&#39;development&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.yml</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> commonConfig <span class="token operator">=</span> yaml<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> envConfig <span class="token operator">=</span> yaml<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>envPath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 因为 configModule 有一个 load 方法 需要传入一个函数，这里导出一个函数</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 这里使用 lodash 中的合并函数</span>
  <span class="token keyword">return</span> _<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> envConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 lodash</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>npm i lodash

<span class="token comment">// 使用</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、在模块文件中加载配置" tabindex="-1"><a class="header-anchor" href="#_3、在模块文件中加载配置" aria-hidden="true">#</a> 3、在模块文件中加载配置</h4><blockquote><p>app.module.ts</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/config&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> configuration <span class="token keyword">from</span> <span class="token string">&#39;./configuration&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    ConfigModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        isGlobal<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// isGlobal开启就可以全局访问</span>
        load<span class="token operator">:</span> <span class="token punctuation">[</span>configuration<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>AppService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、在service文件中使用-1" tabindex="-1"><a class="header-anchor" href="#_4、在service文件中使用-1" aria-hidden="true">#</a> 4、在Service文件中使用</h4><h4 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-hidden="true">#</a></h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./enum/config.enum&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppService</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> config<span class="token operator">:</span> ConfigService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;db&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//这里可以读取到config的配置信息</span>
      
      <span class="token comment">// 使用枚举防止字符串书写错误-推荐</span>
      <span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ConfigEnum<span class="token punctuation">.</span><span class="token constant">DB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ConfigEnum<span class="token punctuation">.</span><span class="token constant">DB_HOST</span><span class="token punctuation">)</span>
      
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>创建枚举文件 <code>src/enum/config.enum.ts</code></p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> ConfigEnum <span class="token punctuation">{</span>
  <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token string">&#39;DB&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DB_HOST</span> <span class="token operator">=</span> <span class="token string">&#39;DB_HOST&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,57),r={id:"三、使用第三方自动加载",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#三、使用第三方自动加载","aria-hidden":"true"},"#",-1),v={href:"https://www.npmjs.com/package/config",target:"_blank",rel:"noopener noreferrer"},m=t(`<blockquote><p>别人写好的库，直接调用</p></blockquote><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm i config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>根目录新建config文件夹</p></blockquote><div class="language-any line-numbers-mode" data-ext="any"><pre class="language-any"><code>|--src
|--config
   |--default.json
   |--produciton.json
   |--development.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;database&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>
    <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 直接写就行了。 三个文件都差不多- prod 和 dev 可以覆盖公用的default.json 配置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接使用</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> config <span class="token keyword">from</span> <span class="token string">&#39;config&#39;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;database&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),b={id:"四、其他强大的库-nestjs-config",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#四、其他强大的库-nestjs-config","aria-hidden":"true"},"#",-1),h={href:"https://github.com/nestjsx/nestjs-config",target:"_blank",rel:"noopener noreferrer"};function y(f,w){const a=o("ExternalLinkIcon");return c(),i("div",null,[n("p",null,[n("a",u,[s("视频讲解"),e(a)])]),d,n("h2",r,[k,s(" 三、"),n("a",v,[s("使用第三方自动加载"),e(a)])]),m,n("h2",b,[g,s(" 四、其他强大的库 "),n("a",h,[s("nestjs-config"),e(a)])])])}const q=p(l,[["render",y],["__file","config.html.vue"]]);export{q as default};
